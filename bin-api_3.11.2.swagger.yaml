swagger: '2.0'
info:
  title: Box It Now API
  description: Access BIN functionality remotely
  version: 1.7.1
host: yourendpoint.boxitnow.com
schemes:
  - https
basePath: /api
produces:
  - application/json
paths:
  /login:
    post:
      summary: Login
      description: |
        This will allow you to log a user into a session.
      parameters:
        - name: 'LoginForm[username]'
          in: query
          description: The user's username or email
          required: true
          type: string
        - name: 'LoginForm[password]'
          in: query
          description: The user's password
          required: true
          type: string
        - name: apiKey
          in: query
          description: api access token
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: 'The login result, gives errors if invalid credentials'
          schema:
            $ref: '#/definitions/LoginSuccess'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /register:
    post:
      summary: Register
      description: |
        This will allow you to create a new user
      parameters:
        - name: 'RegisterForm[username]'
          in: query
          description: The user's username
          required: true
          type: string
        - name: 'RegisterForm[password]'
          in: query
          description: 'The password, must be more than 6 characters. Invalid password will give you and JSON error when you can show the user'
          required: true
          type: string
        - name: 'RegisterForm[email]'
          in: query
          description: The user's email
          required: true
          type: string
        - name: 'RegisterForm[firstName]'
          in: query
          description: The user's first name
          required: false
          type: string
        - name: 'RegisterForm[lastName]'
          in: query
          description: The user's last name
          required: false
          type: string
        - name: 'RegisterForm[activate]'
          in: query
          description: 'Automatically initiate the user, default=false'
          required: false
          type: string
        - name: 'RegisterForm[ephemeral]'
          in: query
          description: Set this true if the user is created for temporary reasons. default=false
          required: false
          type: string
        - name: apiKey
          in: query
          description: api access token
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: 'The registration result, with user token, gives errors if invalid'
          schema:
            $ref: '#/definitions/LoginSuccess'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /user/updatePassword:
    post:
      summary: Update Password
      description: |
        This will allow you to update user password
      parameters:
        - name: username
          in: query
          description: The user's username
          required: true
          type: string
        - name: password
          in: query
          description: The original password
          required: true
          type: string
        - name: passwordNew
          in: query
          description: 'The new password, must be more than 6 characters. Invalid password will give you and JSON error when you can show the user'
          required: true
          type: string
        - name: apiKey
          in: query
          description: api access token
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: 'The update result, gives errors if invalid credentials'
          schema:
            $ref: '#/definitions/DefaultResult'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /user/updateInfo:
    post:
      summary: Update Info
      description: |
        This will allow you to update user information
      parameters:
        - name: username
          in: query
          description: The user's username
          required: true
          type: string
        - name: password
          in: query
          description: 'The password, must be more than 6 characters. Invalid password will give you and JSON error when you can show the user'
          required: true
          type: string
        - name: email
          in: query
          description: The user's email
          required: true
          type: string
        - name: firstName
          in: query
          description: The user's first name
          required: false
          type: string
        - name: lastName
          in: query
          description: The user's last name
          required: false
          type: string
        - name: apiKey
          in: query
          description: api access token
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: 'The update result, gives errors if invalid credentials'
          schema:
            $ref: '#/definitions/DefaultResult'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /user/merge:
    post:
      summary: Merge
      description: |
        Merges ephemeral users into main users
      parameters:
        - name: 'Target[username]'
          in: query
          description: The permanent user's username
          required: true
          type: string
        - name: 'Target[password]'
          in: query
          description: The permanent user's password
          required: true
          type: string
        - name: 'Target[source_username]'
          in: query
          description: The ephemeral user's username
          required: true
          type: string
        - name: 'Target[source_password]'
          in: query
          description: The ephemeral user's password
          required: true
          type: string
        - name: apiKey
          in: query
          description: api access token
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: 'The merge result, gives errors if invalid credentials'
          schema:
            type: array
            items:
              $ref: '#/definitions/DefaultResult'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /user/makePersistent:
    post:
      summary: Persist
      description: |
        Changes ephemeral user to a permanent
      parameters:
        - name: 'Target[username]'
          in: query
          description: The ephermeral user's username
          required: true
          type: string
        - name: 'Target[password]'
          in: query
          description: The ephermeral user's password
          required: true
          type: string
        - name: 'Target[newuser_username]'
          in: query
          description: The new user's username
          required: true
          type: string
        - name: apiKey
          in: query
          description: api access token
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: 'The persist result, gives errors if invalid credentials'
          schema:
            type: array
            items:
              $ref: '#/definitions/DefaultResult'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /category:
    get:
      summary: Categories
      description: |
        Get a list of available categories
      tags:
        - Item
      responses:
        '200':
          description: The list and description available categories
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/category/{id}/items':
    get:
      summary: Items
      description: |
        Gets a list of available Items in the specified Category
      parameters:
        - name: id
          in: path
          description: category id
          required: true
          type: string
      tags:
        - Item
      responses:
        '200':
          description: 'The list of items, gives errors if invalid category id'
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/item/studio/{id}':
    get:
      summary: Studio
      description: |
        Gets the studio html data, requires preloading necessary libraries
      parameters:
        - name: id
          in: path
          description: item id
          required: true
          type: string
      tags:
        - Item
      responses:
        '200':
          description: 'Studio widget module, Gives errors if invalid item id'
          schema:
            type: array
            items:
              $ref: '#/definitions/Item'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/design/layout/{id}':
    post:
      summary: Layout
      description: |
        Generates a resized design from specific parameters and returns the design info.
      parameters:
        - name: id
          in: path
          description: The base design id
          required: true
          type: string
        - name: type
          in: query
          description: design type
          required: true
          type: string
        - name: parameters
          in: query
          description: design parameters
          required: false
          type: array
          items: {}
        - name: apiKey
          in: query
          description: api access token
          required: true
          type: string
      tags:
        - Resize
      responses:
        '200':
          description: Gives errors if invalid item id
          schema:
            type: array
            items:
              $ref: '#/definitions/ResizeParameters'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/resize/info/{id}':
    get:
      summary: Info
      description: |
        Gets information about a resize, including file URLs. NOTE: Low Res PNG images are not available until AFTER the low res PDF has been generated.
      parameters:
        - name: id
          in: path
          description: item id
          required: true
          type: string
      tags:
        - Resize
      responses:
        '200':
          description: Gives errors if invalid item id
          schema:
            type: array
            items:
              $ref: '#/definitions/Resize'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/resize/compiledPdf/{id}':
    get:
      summary: Hi-Res PDF - (Marked for Deprecation)
      description: |
        Gets the hi-res compiled pdf of deisgn. If file does not exist, it may take ~30s to generate.
      parameters:
        - name: id
          in: path
          description: item id
          required: true
          type: string
      tags:
        - Resize
      responses:
        '200':
          description: Gives errors if invalid item id
          schema:
            type: array
            items:
              $ref: '#/definitions/ResizePdf'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/resize/generateProofPdf/{id}':
    get:
      summary: Generate Proof
      description: |
        Generates the low-res compiled pdf of design. If file does not exist, it may take ~30s to generate. This call will also generate the low res png images.
      parameters:
        - name: id
          in: path
          description: item id
          required: true
          type: string
      tags:
        - Resize
      responses:
        '200':
          description: Gives errors if invalid item id
          schema:
            type: array
            items:
              $ref: '#/definitions/ResizeLowPdf'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/resize/download/{id}/{file}':
    get:
      summary: Download File
      description: |
        Initiates file download for a specific filetype, from a specific resized design
      parameters:
        - name: id
          in: path
          description: resize id
          required: true
          type: string
        - name: file
          in: path
          description: file type
          required: true
          type: string
      tags:
        - Resize
      responses:
        '200':
          description: 'Gives errors if invalid item id, or filetype'
          schema:
            type: object
            items:
              $ref: '#/definitions/DefaultFileResult'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/resize/download/{id}':
    post:
      summary: Download Fileset
      description: |
        Initiates file download for a specific filetype, from a specific resized design
      parameters:
        - name: id
          in: path
          description: resize id
          required: true
          type: string
        - name: fileset
          in: path
          description: file types
          required: true
          type: array
      tags:
        - Resize
      responses:
        '200':
          description: 'Gives errors if invalid item id, or filetype'
          schema:
            type: array
            items:
              $ref: '#/definitions/DefaultFilesetResult'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/resize/delete/{id}':
    get:
      summary: Delete
      description: |
        Removes the design for future viewing and searches, Delete design from system
      parameters:
        - name: id
          in: path
          description: resize id
          required: true
          type: string
      tags:
        - Resize
      responses:
        '200':
          description: Gives errors if invalid item id
          schema:
            type: array
            items:
              $ref: '#/definitions/DefaultResult'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/media/delete/{id}':
    get:
      summary: Delete
      description: |
        Removes the image for use in future designs, Delete image from media manager
      parameters:
        - name: id
          in: path
          description: node id
          required: true
          type: string
      tags:
        - Media
      responses:
        '200':
          description: Gives errors if invalid item id
          schema:
            type: array
            items:
              $ref: '#/definitions/DefaultResult'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /project:
    post:
        tags:
        - "Project"
        summary: "Add a new folder to the logged in user's list"
        description: ""
        operationId: "addFolder"
        consumes:
        - "application/x-www-form-urlencoded"
        - "multipart/form-data"
        produces:
        - "application/json"
        parameters:
        - in: "formData"
          name: "folderName"
          description: "Name of the new folder to be added"
          required: true
          type: "string"
        responses:
          "200":
            description: "Success"
          "405":
            description: "Invalid Folder Name"
  /project/all:
    get:
      tags:
      - "Project"
      summary: "Returns a list of all project folder information and contents for the logged in user"
      description: ""
      operationId: "getAllProjectFolders"
      produces:
      - "application/json"
      responses:
        default:
          description: "Success"
  /project/{folderId}:
    get:
      tags:
      - "Project"
      summary: "Returns a list of project folder information and contents for the specified folder"
      description: ""
      operationId: "getSingleProjectFolder"
      consumes:
        - "application/x-www-form-urlencoded"
        - "multipart/form-data"
      produces:
        - "application/json"
      parameters:
        - name: "folderId"
          in: "path"
          description: "The folderId that needs to be retrieved."
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid folderId supplied"
    put:
      tags:
      - "Project"
      summary: "Update folder info"
      description: "This can only be done by the logged in user."
      operationId: "updateFolder"
      consumes:
      - "application/x-www-form-urlencoded"
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "folderId"
        in: "path"
        description: "name that need to be updated"
        required: true
        type: "integer"
      responses:
        "200": 
          description: "Success"
        "400":
          description: "Invalid folder data supplied"
        "404":
          description: "Invalid folderId, folder not found"
    delete: 
      tags:
      - "Project"
      summary: "Deletes specified Folder"
      description: "This can only be done by the logged in user."
      operationId: "deleteFolder"
      consumes:
      - "application/x-www-form-urlencoded"
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "folderId"
        in: "path"
        description: "The name that needs to be deleted"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Success"
        "400":
          description: "User not logged in"
        "404":
          description: "Invalid folderId, folder not found"
definitions: 
  Category:
    type: object
    properties:
      categoryGroupRefNo:
        type: string
        description: Category id
      categoryGroupDesc:
        type: string
        description: Description of category.
      image1:
        type: string
        description: Image URL representing the cateogry.
      image2:
        type: string
        description: Image URL representing the category.
  DefaultFilesetResult:
    type: object
    properties:
      projectFile:
        type: object
        description: A fileset from the specific resize
  DefaultFileResult:
    type: object
    properties:
      projectFile:
        type: object
        description: A file from the specific resize
  DefaultResult:
    type: object
    properties:
      message:
        type: string
        description: Success
      errors:
        type: string
        description: Error
  Error:
    type: object
    properties:
      message:
        type: string
      fields:
        type: string
  Item:
    type: object
    properties:
      itemRefNo:
        type: string
        description: Item id
      categoryGroupNo:
        type: string
        description: Category id
      itemNo:
        type: string
        description: Item number
      itemQuickDesc:
        type: string
        description: Item desc
  LoginSuccess:
    type: object
    properties:
      message:
        type: string
        description: Success
      token:
        type: string
        description: User token
  Project:
    type: object
    properties:
      folderId:
        type: integer
        format: int64
      folderName:
        type: string
        example: "Customer 1"
  Result:
    type: object
    properties:
      message:
        type: string
        description: Success
      errors:
        type: string
        description: Error
  Resize:
    type: object
    properties:
      thumbnail:
        type: string
        description: Thumbnail of resize
      pdf:
        type: string
        description: Form PDF file
      pdfLayout:
        type: string
        description: Hi-Resolution PDF compilation file
      pdfLowres:
        type: string
        description: Low-Resolution PDF compilation file
      pngLowresOutside:
        type: string
        description: PNG Image with Transparency of the design Outside View
      pngLowresInside:
        type: string
        description: PNG Image with Transparency of the design Inside View
      artwork:
        type: string
        description: Outside and Inside layout screenshot png
      outside:
        type: string
        description: Outside View screenshot png
      inside:
        type: string
        description: Inside View screenshot png
      cad_dims:
        type: string
        description: CAD view of design with dimension
      cad_flat:
        type: string
        description: CAD view of design without dimension
      eps:
        type: string
        description: EPS file
      dxf:
        type: string
        description: DXF cad file
      dds3:
        type: string
        description: DDS3 file
      hpgl:
        type: string
        description: HPGL cutting file
      parameters:
        type: array
        description: Layout Parameters
  ResizeLowPdf:
    type: object
    properties:
      proofpdf:
        type: object
        description: Low-Resolution (Proof) PDF compilation file
  ResizeParameters:
    type: object
    properties:
      parameters:
        type: array
        description: Layout Parameters
  ResizePdf:
    type: object
    properties:
      highrespdf:
        type: object
        description: Hi-Resolution PDF compilation file
  Success:
    type: object
    properties:
      message:
        type: string
        description: Success