swagger: '2.0'
info:
  title: Box It Now API
  description: Access BIN functionality remotely
  version: "1.7.1"
# the domain of the service
host:
   "yourendpoint.boxitnow.com"
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /api
produces:
  - application/json
paths:
  /login:
    post:
      summary: User Login
      description: |
        This will allow you to log a user into a session.
      parameters:
        - name: LoginForm[username]
          in: query
          description: The user's username or email
          required: true
          type: string
        - name: LoginForm[password]
          in: query
          description: The user's password
          required: true
          type: string
        - name: apiKey
          in: query
          description: api access token
          required: true
          type: string
      tags:
        - User
      responses:
        200:
          description: The login result, gives errors if invalid credentials
          schema:
            $ref: '#/definitions/LoginSuccess'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /register:
    post:
      summary: User Registration
      description: |
        This will allow you to create a new user
      parameters:
        - name: RegisterForm[username]
          in: query
          description: The user's username
          required: true
          type: string
        - name: RegisterForm[password]
          in: query
          description: The password, must be more than 6 characters. Invalid password will give you and JSON error when you can show the user
          required: true
          type: string
        - name: RegisterForm[email]
          in: query
          description: The user's email
          required: true
          type: string
        - name: RegisterForm[firstName]
          in: query
          description: The user's email
          required: false
          type: string
        - name: RegisterForm[lastName]
          in: query
          description: The user's email
          required: false
          type: string
        - name: RegisterForm[activate]
          in: query
          description: Automatically initate the user, default=false
          required: false
          type: string
        - name: RegisterForm[ephemeral]
          in: query
          description: Set this true if the user is created for temporary reasons. default=false
          required: false
          type: string
        - name: apiKey
          in: query
          description: api access token
          required: true
          type: string
      tags:
        - User
      responses:
        200:
          description: The login result, gives errors if invalid credentials
          schema:
            $ref: '#/definitions/LoginSuccess'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /user/merge:
    post:
      summary: User Merge
      description: |
        Merges ephemeral users into main users
      parameters:
        - name: Target[username]
          in: query
          description: The permanent user's username
          required: true
          type: string
        - name: Target[password]
          in: query
          description: The permanent user's password
          required: true
          type: string
        - name: Target[source_username]
          in: query
          description: The ephemeral user's username
          required: true
          type: string
        - name: Target[source_password]
          in: query
          description: The ephemeral user's password
          required: true
          type: string
        - name: apiKey
          in: query
          description: api access token
          required: true
          type: string
      tags:
        - User
      responses:
        200:
          description: The login result, gives errors if invalid credentials
          schema:
            type: object
            items:
              $ref: '#/definitions/Result'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /user/makePersistent:
    post:
      summary: Changes ephemeral user to a permanent
      description: |
        This will all you to log a user into a session.
      parameters:
        - name: Target[username]
          in: query
          description: The ephermeral user's username
          required: true
          type: string
        - name: Target[password]
          in: query
          description: The ephermeral user's password
          required: true
          type: string
        - name: Target[newuser_username]
          in: query
          description: The new user's username
          required: true
          type: string
        - name: apiKey
          in: query
          description: api access token
          required: true
          type: string
      tags:
        - User
      responses:
        200:
          description: The login result, gives errors if invalid credentials
          schema:
            type: object
            items:
              $ref: '#/definitions/Result'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /category:
    get:
      summary: Get a list of available categories
      description: |
        Get a list of available categories
      tags:
        - Item
      responses:
        200:
          description: The login result, gives errors if invalid credentials
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /category/{id}/items:
    get:
      summary: Gets a list of available Items in the specified Category
      description: |
        Gets a list of available Items in the specified Category
      parameters:
        - name: id
          in: path
          description: category id
          required: true
          type: number
      tags:
        - Item
      responses:
        200:
          description: Gives errors if invalid category id
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /item/studio/{id}:
    get:
      summary: Gets the studio html data, requires preloading necesary libraries
      description: |
        Get a item html view
      parameters:
        - name: id
          in: path
          description: item id
          required: true
          type: number
      tags:
        - Item
      responses:
        200:
          description: Gives errors if invalid item id
          schema:
            type: array
            items:
              $ref: '#/definitions/Item'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /design/layout/{id}:
    post:
      summary: Generates a resized design from specific parameters and returns the design info.
      description: |
        Get the design info for a design with specific parameters
      parameters:
        - name: id
          in: path
          description: The ephermeral user's username
          required: true
          type: string
        - name: type
          in: query
          description: design type
          required: true
          type: string
        - name: parameters
          in: query
          description: design parameters
          required: false
          type: array
          items : {}
        - name: apiKey
          in: query
          description: api access token
          required: true
          type: string
      tags:
        - Resize
      responses:
        200:
          description: Gives errors if invalid item id
          schema:
            type: array
            items:
              $ref: '#/definitions/Resize'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /resize/info/{id}:
    get:
      summary: Gets information about a resize, including file URLs
      description: |
        Gets information about a resize, including file URLs
      parameters:
        - name: id
          in: path
          description: item id
          required: true
          type: number
      tags:
        - Resize
      responses:
        200:
          description: Gives errors if invalid item id
          schema:
            type: array
            items:
              $ref: '#/definitions/Resize'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /resize/compiledPdf/{id}:
    get:
      summary: Gets the hi-res compiled pdf of deisgn
      description: |
        Gets the hi-res compiled pdf of deisgn. If file does not exist, it may take ~30s to generate.
      parameters:
        - name: id
          in: path
          description: item id
          required: true
          type: number
      tags:
        - Resize
      responses:
        200:
          description: Gives errors if invalid item id
          schema:
            type: array
            items:
              $ref: '#/definitions/ResizePdf'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /resize/delete/{id}:
    get:
      summary: Removes the design for future viewing and searches
      description: |
        Delete design from system
      parameters:
        - name: id
          in: path
          description: resize id
          required: true
          type: number
      tags:
        - Resize
      responses:
        200:
          description: Gives errors if invalid item id
          schema:
            type: object
            items:
              $ref: '#/definitions/Result'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /media/delete/{id}:
    get:
      summary: Removes the image for use in future designs
      description: |
        Delete image from media manager
      parameters:
        - name: id
          in: path
          description: node id
          required: true
          type: number
      tags:
        - Media
      responses:
        200:
          description: Gives errors if invalid item id
          schema:
            type: object
            items:
              $ref: '#/definitions/Result'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Category:
    type: object
    properties:
      categoryGroupRefNo:
        type: string
        description: Category id
      categoryGroupDesc:
        type: string
        description: Description of category.
      image1:
        type: string
        description: Image URL representing the cateogry.
      image2:
        type: string
        description: Image URL representing the cateogry.
  Item:
    type: object
    properties:
      itemRefNo:
        type: string
        description: Item id
      categoryGroupNo:
        type: string
        description: Category id
      itemNo:
        type: string
        description: Item number
      itemQuickDesc:
        type: string
        description: Item desc
  Resize:
    type: object
    properties:
      thumbnail:
        type: string
        description: Thumbnail of resize
      pdfLayout:
        type: string
        description: Hi-Resolution PDF compilation file
      cad_dims:
        type: string
        description: CAD view of design with dimension
      cad_flat:
        type: string
        description: CAD view of design without dimension
      eps:
        type: string
        description: EPS file
      dxf:
        type: string
        description: DXF cad file
      hpgl:
        type: string
        description: HPGL cutting file
  ResizePdf:
    type: object
    properties:
      highrespdf:
        type: object
        description: Hi-Resolution PDF compilation file
  Result:
    type: object
    properties:
      message:
        type: string
      errors:
        type: string
  Success:
    type: object
    properties:
      message:
        type: string
        description: Success
  LoginSuccess:
    type: object
    properties:
      message:
        type: string
        description: Success
      token:
        type: string
        description: User token
  Error:
    type: object
    properties:
      message:
        type: string
      fields:
        type: string
